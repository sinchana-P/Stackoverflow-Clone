{"ast":null,"code":"import * as api from '../api';\nexport const signup = (authData, navigate) => async dispatch => {\n  try {\n    // { data }  : we are receiving response (result [new user/existing user] & token) from database, after sending authData to the database\n    //       3.    &            1.             // 2. in   --> api/index.js\n    const {\n      data\n    } = await api.signUp(authData);\n    console.log(data);\n    dispatch({\n      type: 'AUTH',\n      data\n    });\n    navigate('/'); // after login , to redirect directly to home page. We use navigate\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const login = (authData, navigate) => async dispatch => {\n  try {\n    // { data }  : we are receiving response (result [new user/existing user] & token) from database, after sending authData to the database\n    //       3.    &            1.             // 2. in   --> api/index.js\n    const {\n      data\n    } = await api.logIn(authData);\n    dispatch({\n      type: 'AUTH',\n      data\n    });\n    navigate('/'); // after login , to redirect directly to home page. We use navigate\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n// open file :\n// Auth --> Auth.jsx\n\n// Redux thunk:\n// is used to do asynchronous action in Redux","map":{"version":3,"names":["api","signup","authData","navigate","dispatch","data","signUp","console","log","type","error","login","logIn"],"sources":["F:/NULLCLASS/Stack-overflow-clone/client/src/actions/auth.js"],"sourcesContent":["import * as api from '../api'\r\n\r\nexport const signup = (authData, navigate) => async (dispatch) => {\r\n    try{\r\n        // { data }  : we are receiving response (result [new user/existing user] & token) from database, after sending authData to the database\r\n        //       3.    &            1.             // 2. in   --> api/index.js\r\n        const { data } = await api.signUp(authData)\r\n        console.log(data);\r\n        dispatch({ type: 'AUTH', data })\r\n        navigate('/')    // after login , to redirect directly to home page. We use navigate\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\nexport const login = (authData, navigate) => async (dispatch) => {\r\n    try{\r\n        // { data }  : we are receiving response (result [new user/existing user] & token) from database, after sending authData to the database\r\n        //       3.    &            1.             // 2. in   --> api/index.js\r\n        const { data } = await api.logIn(authData)\r\n        dispatch({ type: 'AUTH', data })\r\n        navigate('/')    // after login , to redirect directly to home page. We use navigate\r\n    }catch(error){\r\n        console.log(error)\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// open file :\r\n// Auth --> Auth.jsx\r\n\r\n\r\n// Redux thunk:\r\n// is used to do asynchronous action in Redux"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAG;IACC;IACA;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACM,MAAM,CAACJ,QAAQ,CAAC;IAC3CK,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;IACjBD,QAAQ,CAAC;MAAEK,IAAI,EAAE,MAAM;MAAEJ;IAAK,CAAC,CAAC;IAChCF,QAAQ,CAAC,GAAG,CAAC,EAAI;EACrB,CAAC,QAAMO,KAAK,EAAC;IACTH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB;AACJ,CAAC;AAGD,OAAO,MAAMC,KAAK,GAAG,CAACT,QAAQ,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC7D,IAAG;IACC;IACA;IACA,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAML,GAAG,CAACY,KAAK,CAACV,QAAQ,CAAC;IAC1CE,QAAQ,CAAC;MAAEK,IAAI,EAAE,MAAM;MAAEJ;IAAK,CAAC,CAAC;IAChCF,QAAQ,CAAC,GAAG,CAAC,EAAI;EACrB,CAAC,QAAMO,KAAK,EAAC;IACTH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB;AACJ,CAAC;;AAQD;AACA;;AAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}